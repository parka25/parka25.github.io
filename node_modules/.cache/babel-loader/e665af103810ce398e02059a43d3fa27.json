{"ast":null,"code":"import _slicedToArray from \"/Users/andrewpark/Desktop/React_Project_Final-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nvar useFetch = function useFetch(url) {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isPending = _useState4[0],\n    setIsPending = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  useEffect(function () {\n    var abortCont = new AbortController();\n    setTimeout(function () {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(function (res) {\n        if (!res.ok) {\n          throw Error(\"Could not fetch data for that resource\");\n        }\n        return res.json();\n      }).then(function (data) {\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(function (err) {\n        if (err.name === \"AbortError\") {\n          console.log(\"Fetch aborted\");\n        } else {\n          setError(err.message);\n          setIsPending(false);\n        }\n      });\n    }, 5);\n    return function () {\n      return abortCont.abort();\n    };\n  }, [url]);\n  return {\n    data: data,\n    isPending: isPending,\n    error: error\n  };\n};\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort"],"sources":["/Users/andrewpark/Desktop/React_Project_Final-main/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal })\n        .then((res) => {\n          if (!res.ok) {\n            throw Error(\"Could not fetch data for that resource\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch((err) => {\n          if (err.name === \"AbortError\") {\n            console.log(\"Fetch aborted\");\n          } else {\n            setError(err.message);\n            setIsPending(false);\n          }\n        });\n    }, 5);\n    return () => abortCont.abort();\n  }, [url]);\n  return { data, isPending, error };\n};\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,IAAMC,QAAQ,GAAG,SAAXA,QAAQ,CAAIC,GAAG,EAAK;EAAA,gBACAH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BI,IAAI;IAAEC,OAAO;EAAA,iBACcL,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAzCM,SAAS;IAAEC,YAAY;EAAA,iBACJP,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjCQ,KAAK;IAAEC,QAAQ;EACtBR,SAAS,CAAC,YAAM;IACd,IAAMS,SAAS,GAAG,IAAIC,eAAe,EAAE;IACvCC,UAAU,CAAC,YAAM;MACfC,KAAK,CAACV,GAAG,EAAE;QAAEW,MAAM,EAAEJ,SAAS,CAACI;MAAO,CAAC,CAAC,CACrCC,IAAI,CAAC,UAACC,GAAG,EAAK;QACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UACX,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACvD;QACA,OAAOF,GAAG,CAACG,IAAI,EAAE;MACnB,CAAC,CAAC,CACDJ,IAAI,CAAC,UAACX,IAAI,EAAK;QACdC,OAAO,CAACD,IAAI,CAAC;QACbG,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDW,KAAK,CAAC,UAACC,GAAG,EAAK;QACd,IAAIA,GAAG,CAACC,IAAI,KAAK,YAAY,EAAE;UAC7BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;QAC9B,CAAC,MAAM;UACLf,QAAQ,CAACY,GAAG,CAACI,OAAO,CAAC;UACrBlB,YAAY,CAAC,KAAK,CAAC;QACrB;MACF,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,CAAC;IACL,OAAO;MAAA,OAAMG,SAAS,CAACgB,KAAK,EAAE;IAAA;EAChC,CAAC,EAAE,CAACvB,GAAG,CAAC,CAAC;EACT,OAAO;IAAEC,IAAI,EAAJA,IAAI;IAAEE,SAAS,EAATA,SAAS;IAAEE,KAAK,EAALA;EAAM,CAAC;AACnC,CAAC;AAED,eAAeN,QAAQ"},"metadata":{},"sourceType":"module"}